name: Build and Publish

on:
  # run it on push to the default repository branch
  push:
    branches: [main]
  # run it during pull request
  pull_request:

jobs:
  build-and-push-backend:
    on:
      push:
        paths:
          - api/**
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image and push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./api
          # Note: tags has to be all lower-case
          tags: |
            ajotcole/tessie-tracker-api:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build-and-deploy-frontend:
      on:
      push:
        paths:
          - frontend/**
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved
      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@v2"
        with:
          config_file: ./github/workflows/GITHUBRUNNER3.ovpn
          password: ${{ secrets.OVPN_PASSWORD }}
      - name: Use Node.js 18.x
        uses: actions/setup-node@v1
        with:
          node-version: 18.x
      - run: npm install --legacy-peer-deps
        working-directory: frontend
      - run: npm run build --if-present
        env:
          CI: false
        working-directory: frontend
      - name: Copy to server
        uses: garygrossgarten/github-action-scp@v0.7.3
        working-directory: frontend
        with:
          local: 'dist'
          host: ${{ secrets.SERVER_IP }}
          port: 22
          remote: '../../var/lib/docker/volumes/tessie-tracker-frontend/_data'
          username: ${{ secrets.HETZNER_USERNAME }}
          password: ${{ secrets.HETZNER_PASSWORD }}
